% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anova_sites.r
\name{anova_sites}
\alias{anova_sites}
\title{Community-level Permutation Test in Double Constrained Correspondence Analysis (dc-CA)}
\usage{
anova_sites(object, permutations = 999, by = NULL)
}
\arguments{
\item{object}{an object from \code{\link{dc_CA_vegan}}.}

\item{by}{character \code{"axis"} which sets the test statistic to the
first eigenvalue of the dc-CA model.
Default: \code{NULL} which set the test statistic to the inertia named \code{constraintsTE}
in the inertia element of \code{\link{dc_CA_vegan}}). This is
the environmentally constrained inertia explained by the traits (without trait covariates).
(which is equal to the trait-constrained inertia
explained by the environmental predictors (without covariates).)
The default is quicker computationally as it avoid computation of an svd of permuted data sets.}

\item{permutation}{a list of control values for the permutations as
returned by the function \code{\link[permute]{how}}, or
the number of permutations required (default 999), or
a permutation matrix where each row gives the permuted indices.}
}
\value{
A list with two elements with names \code{table} and \code{eig}
 with a table as from \code{\link[vegan]{anova.cca}} and the dc-CA eigenvalues, respectively.
}
\description{
\code{anova_sites} performs a Community-level permutation test of dc-CA.
The test uses residual predictor permutation (ter Braak 2022), which is robust
against differences in sites total abundance in the \code{response} in \code{\link{dc_CA_vegan}} (ter Braak & te Beest, 2022)
The arguments of the function are similar to those of \code{\link[vegan]{anova.cca}}, but more restricted.
With equal site-totals as in \code{\link{dc_CA_vegan}}, \code{anova(object$RDAonEnv)} is much faster.
}
\details{
The algorithm is two-step. The first step is a \code{\link[vegan]{cca}}
of the transposed \code{response} on to the traits using
\code{formulaTraits}. The second is a weighted redundancy analysis of the community weighted means (CWM) of
orthonormalized traits againt the environemtal variables using \code{formulaEnv} using a
published R-code for weighted redundancy analysis, which includes statistical significance
tests using residual predictor permutation (ter Braak, 2022).
}
\examples{
data("dune_trait_env")
# rownames are carried forward in results
rownames(dune_trait_env$comm) <- dune_trait_env$comm$Sites
mod <- dc_CA_vegan(formulaEnv = ~A1+Moist+Mag+Use+Manure,
                   formulaTraits = ~. ,
                   response = dune_trait_env$comm[, -1],  # must delete "Sites"
                   dataEnv =dune_trait_env$envir,
# delete "Species", "Species_abbr" from traits and
# use all remaining variables due to formulaTraits = ~. (the default)
                   dataTraits =dune_trait_env$traits[,-c(1,2)],
                   verbose = TRUE)





anova(mod)


a_species <- anova_species(mod)
a_species
# anova_species can be used for manual forward selection of
# trait variables, as done for environmental variables in the demo dune_FS_dcCA.r,
# based on the first eigenvalue and its significance
# and adding the first axis of the constrained species scores from mod to the Condition
# of a new mod.
(eig1_and_pval <- c(eig = a_species$eig[1], pval = a_species$table$`Pr(>F)`[1]))
a_species$eig
#
anova_sites(mod)

mod$eigenvalues / anova_species(mod)$eig[seq_along(mod$eigenvalues)]
mod$eigenvalues / anova_sites(mod)$eig[seq_along(mod$eigenvalues)]








# Benchmark the community-level test
#microbenchmark::microbenchmark(anova(mod$RDAonEnv, by = "axis"), anova_sites(mod, by ="axis"),times = 1)
#microbenchmark::microbenchmark(anova(mod$RDAonEnv), anova_sites(mod), times = 2)
}
\references{
ter Braak, C.J.F. & te Beest, D.E. 2022. Testing environmental effects
on taxonomic composition with canonical correspondence analysis:
alternative permutation tests are not equal.
Environmental and Ecological Statistics. 29 (4), 849-868.
https://doi.org/10.1007/s10651-022-00545-4

ter Braak, C.J.F. (2022) Predictor versus response permutation
for significance testing in weighted regression and redundancy analysis.
Journal of statistical computation and simulation, 92, 2041-2059.
 https://doi.org/10.1080/00949655.2021.2019256
}
